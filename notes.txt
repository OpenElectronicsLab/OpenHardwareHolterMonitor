START HERE:
 * REV2 board required
   - FIXED in v0.2 : d'oh! v0.1 BT1 is BAT2 & BT2 is BAT1 !!!
   - FIXED in v0.2 : d'oh! v0.1 DGS and CBE are wrong on all the Qs !!!
     - we can desolder and rotate and/or jump around
 * Case Design
 * Software prototype on esp32

ORDER PROCESS:
* board dimenions units are in CM not MM at Gold Phoenix

TODO THIS VERSION (v0.2):
* if we re-generate gerbers:
  - fix footprint for FL1 (CMS1-12)
  - move R17 t/m R26 to the left/right to get out of the way of other labels
  - fix solder mask for ADS?
  - north reserved pin which connects to DGND: smooth awkward copper path
  - back copper power-input zone is off by a dot; align with other zones

FOR NEXT VERSION:
* check footprints for corresponding 3D models
* check footprints to see if they are current or from an older version
* Check BOM for duplicates, update schematic accordingly
  - e.g.: "R" vs. "R-device" components which are both 100K Ohm 0603.
* keep a detailed journal of decisions
* add manufacturer-partnumber and manufacturer fields before other annotations
* label all of the networks between components
* finish BOM before starting PCB

CONSIDER:
* Medical Instrument Design and Development on page 265
  suggests switching to sheilded leads for EMI
  (can we use filtering instead?)

* look at standards, determine if external clock is required

* Build a configurably "noisy" and "bad" power-supply for testing
  dial-in out-of-spec for USB: (only 3 or 4 volts or +8 volts)
  configurable amount of 50Hz or 60Hz noise

* Create test signals (configurable fake EEG readings we can feed in)

* simulate defribulator voltage added to test cardiac signals

* test vibration influence with car, train, metro, bus, bike
  compare with swapping-in a tantilum for C8

* Regulater's Capacitor C42 1uF to 10uF should be fine;
  bigger is typically better, but we may get oscillation, need to test

# NOTES ON v0.1 SOT-23 TRANSITORS WITH INCORRECT FOOTPRINTS

## KiCad SOT-23 footprint pin numbering:

      1
          3
      2

## Q1 Q2 : DSS4240T-7

    v0.1 KiCad     actual part

      E                 B
          C                 C
      B                 E

## Q3 Q4 Q5 Q6: 2N7002-7-F

    v0.1 KiCad     actual part

      D                 G
          S                 D
      G                 S

## Q7 Q8 Q9 Q10 Q11 : DMG2305UX-13

    v0.1 KiCad     actual part

      D                 G
          S                 D
      G                 S

--------------------------------------------
Alternated resistors front-to-back in order increase the clearance between
resistors.

--------------------------------------------
esp32	20mA
 +WiFi	90-260mA
ads1298	5mA
ADP7158	4mA -- just one of many low noise linear regulator
sdCard	<1mA
 write	100mA

not tx	~100-200mA
w/ tx	~500mA ... thus efficient power isolation to run off of USB

2 main batteries, but can operate from one, and can swap each out one at a time
 ... simple power-level indicator? push-button and light up to 0-to-3 LEDs?
 ... also indicate on web-page?
1 (regargeable?) coin battery for the real-time-clock
  TODO: look up coin charger schematic on Adafruit?

LP5912-3.0DRVR LDO Voltage Regulator
reference layout suggests big wide ground connecting Pin2 (NC) to thermal pad
with vias to pin 5 (GND)
and use X7R caps anywhere from 1-to-10uF
and a pullup resistor of 10k-100k for PG

charging: conisder the PCP73833 which has cell temperature monitoring
http://www.microchip.com/wwwproducts/en/en027785

18650 batteries are widely available and cost is reasonable
ADS requires 2.7 min; ESP requires 2.8v min; thus no problem.
batteries drop off dramatically around 3 volts:
http://www.candlepowerforums.com/vb/showthread.php?308451-18650-battery-test-with-capacity-curves-for-many-cells

https://www.amazon.de/Nitecore-Intellicharge-Ladeger%C3%A4t-Li-Ion-Batterien/dp/B06XFH6Z5D/ref=sr_1_1?ie=UTF8&qid=1509900684&sr=8-1&keywords=18650+charger+nitecore

https://smile.amazon.com/Battery-Li-Ion-Rechargeable-Button-LR2032/dp/B0058E94O6/ref=sr_1_sc_2?ie=UTF8&qid=1509899680&sr=8-2-spell&keywords=2032+rechagable


V=IR
R=V/I=(1.2V)/(50e-6)=2.4e4V/1A=24000 Ohm
R=V/I=(1.26V)/(47e6)

RO = (R2*RC)/(R2+RC) - (R2*RH)/(R2+RH) = (R2^2*RC - R2^2*RH)/(R2^2 + R2*RC + R2*RH + RC*RH)
R2^2 (RC - RH) = R0 * R2^2 + R0 * R2 * (RC + RH) + R0*RC*RH
0 = -R2^2 * (RC - RH) + R0 * R2^2 + R0 * R2 * (RC + RH) + R0*RC*RH
0 = (R0 - RC + RH) R2^2 + (R0 * (RC + RH)) * R2 + R0*RC*RH
0 = a * R2^2 + b * R2 + c
R2 = -b +/- sqrt(4*a*c - b^2)/(2a)


eric@titan:~/src/build-mysql-server$ python
Python 2.7.13 (default, Nov 24 2017, 17:33:09) 
[GCC 6.3.0 20170516] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> from math import *
>>> 10e3 * exp(-3380*(1/(273.15+25.) + 1/(273.15+60))
... )
4.681859273431694e-06
>>> 10e3 * exp(-3380*(1/(273.15+25) - 1/(273.15+60)))
3039.1856851602356
>>> exp(1)
2.718281828459045
>>> exp(1)**2
7.3890560989306495
>>> exp(2)  
7.38905609893065
>>> 10e3 * exp(-3380*(1/(273.15+25) - 1/(273.15+60)))
3039.1856851602356
>>> 10e3 * exp(-3380*(1/(273.15+25) - 1/(273.15+45)))
4903.401159843523
>>> 10e3 * exp(-3380*(1/(273.15+25) - 1/(273.15+0.0)))
28223.725086022154
>>> R0 = 19e3
>>> RH = 3039.1856851602356
>>> RC = 28223.725086022154
>>> RH = 4903.401159843523
>>> b= (R0 * (RC + RH))
>>> a = (R0 - RC + RH)
>>> c =R0*RC*RH
>>> R2 = -b - sqrt(4*a*c - b^2)/(2a)
  File "<stdin>", line 1
    R2 = -b - sqrt(4*a*c - b^2)/(2a)
                                  ^
SyntaxError: invalid syntax
>>> R2 = -b - sqrt(4*a*c - b**2)/(2*a)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: math domain error
>>> R2 = (-b - sqrt(b**2 - 4*a*c))/(2*a)
>>> R2
149751.3160728841
>>> R2 = (-b + sqrt(b**2 - 4*a*c))/(2*a)
>>> R2
-4064.231162986638
>>> R2 = (-b - sqrt(b**2 - 4*a*c))/(2*a)
>>> R12
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'R12' is not defined
>>> R2
149751.3160728841
>>> R1=(5e3 -((R2 * RH)/(R2+RH)))
>>> R1
252.0634995252176
>>> 1/( 1/(273.15 + 25) + 1/3380. * ln(24e3/10e3) )                            
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'ln' is not defined
>>> 1/( 1/(273.15 + 25) + 1/3380. * log(24e3/10e3) )
276.77593699164424
>>> log(10)
2.302585092994046
>>> log(exp(1))
1.0
>>> 1/( 1/(273.15 + 25) + 1/3380. * log(24e3/10e3) ) - 273.15
3.6259369916442665
>>> 1/( 1/(273.15 + 25) + 1/3380. * log(5e3/10e3) ) - 273.15
44.416848098726064
>>> 1/( 1/(273.15 + 25) + 1/3380. * log(5e3*.99/10e3) ) - 273.15
44.71700233658754
>>> 1/( 1/(273.15 + 25) + 1/3380. * log(5e3*1.01/10e3) ) - 273.15
44.12023842251841
>>> 1/( 1/(273.15 + 25) + 1/3380. * log(5e3/10e3) ) - 273.15
44.416848098726064
>>> 1.25/50-3
-2.975
>>> 1.25/50e-3
25.0
>>> 1.25/50e-6
25000.0
>>> 1.2/50e-6
23999.999999999996
>>> 1.26/47e-6
26808.510638297874
>>> 1/( 1/(273.15 + 25) + 1/3380. * log(26808e3*1.01/10e3) ) - 273.15
-97.477943830615
>>> 1/( 1/(273.15 + 25) + 1/3380. * log(26808*1.01/10e3) ) - 273.15
0.919435923053868
>>> 1.20/53e-6
22641.509433962263
>>> 1/( 1/(273.15 + 25) + 1/3380. * log(22641*1.01/10e3) ) - 273.15
4.725901928055919
>>> 0.235/53e-6
4433.962264150943
>>> 1/( 1/(273.15 + 25) + 1/3380. * log(4434*0.99/10e3) ) - 273.15
48.34929827083289
>>> 0.265/47e-6
5638.297872340426
>>> 1/( 1/(273.15 + 25) + 1/3380. * log(5638*0.99/10e3) ) - 273.15
41.16716023313063
>>> 1/( 1/(273.15 + 25) + 1/3380. * log(5638*1.01/10e3) ) - 273.15
40.58363861408782
